{"version":3,"sources":["Cart/SelectQuantity.js","Cart/CartItem.js","Error.js","Cart/Cart.js","Category.js","ProductList/ProductListItem.js","Home.js","Login.js","ProductDetail/AddToCart.js","ProductRating/ProductRatingStar.js","ProductRating/ProductRating.js","Reviews/ListReviews.js","Reviews/AddReview.js","ProductDetail/ProductItemDetail.js","index.js"],"names":["QuantityOption","props","quantity","react_default","a","createElement","value","SelectQuantity","options","Object","toConsumableArray","Array","keys","map","i","SelectQuantity_QuantityOption","key","name","defaultValue","selectedQuantity","onChange","updateQuantity","CartItem","item","itemLink","_id","imgUrl","process","img_url","Link","to","title","className","width","src","alt","Cart_SelectQuantity","itemId","userid","price","toFixed","Error","error","display","message","errorCodeName","Cart","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","cart","items","cartError","undefined","updateQuantityError","bind","assertThisInitialized","_this2","client","auth","loginWithCredential","AnonymousCredential","then","db","collection","find","currentUser","id","first","setState","catch","err","console","event","target","newQuantity","parseInt","removeCartItem","updateCartQuantity","_this3","updateOne","$pull","response","modifiedCount","updatedCart","filter","_this4","items._id","$set","items.$.quantity","forEach","_this5","Cart_CartItem","e","reduce","b","src_Error","Fragment","renderCart","calculateTotal","type","Component","Category","category","category_link","NavLink","activeClassName","num","ProductItem","item_link","slogan","description","Home","categories","categoriesError","productsError","fetchProducts","match","params","fetchCategories","prevProps","aggregate","$group","$sum","$sort","toArray","unshift","log","query","sort","asArray","queryString","parse","location","search","page","skip","getCurrPage","limit","pages","Math","ceil","length","link","linkElm","activeClass","categoryName","renderCategories","renderProducts","renderPagination","Login","loggedIn","userName","login","logout","hasRedirectResult","handleRedirectResult","user","isLoggedIn","preventDefault","credential","GoogleRedirectCredential","loginWithRedirect","profile","href","onClick","AddToCart","addToCartError","setNotificationError","addToCart","setNotification","incrementProductQuantity","incQuery","incUpdate","$inc","createCartOrCartItem","onAddToCartSuccess","onAddToCartError","addQuery","addItem","addUpdate","$addToSet","upsert","refs","addToCartButton","setAttribute","textContent","notificationDocument","email","insertOne","onSetNotificationSuccess","onSetNotificationError","setNotificationButton","stock","ref","ProductRatingStar","stars","ProductRating","ProductRating_ProductRatingStar","ListReviews","reviews","review","date","Date","dateString","getUTCFullYear","getUTCMonth","slice","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","editable","src_ProductRating_ProductRating","comment","AddReview","rating","addReviewError","handleRatingChange","handleNameChange","handleCommentChange","addReview","productId","getTime","reviewsDb","getServiceClient","RemoteMongoClient","factory","isWritingReview","onAddReview","disableAddReviewButton","addReviewButton","rows","placeholder","checked","ProductItemDetail","productError","reviewsError","handleAddReview","fetchProduct","fetchReviews","updatedReviews","push","renderProduct","renderReviews","numReviews","categoryLink","AddToCart_AddToCart","Reviews_ListReviews","AddReview_AddReview","Stitch","initializeDefaultAppClient","ReactDOM","render","BrowserRouter","basename","role","data-toggle","data-target","Login_Login","action","aria-hidden","Route","exact","path","src_Home","assign","src_Cart_Cart","ProductItemDetail_ProductItemDetail","document","getElementById"],"mappings":"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","file":"static/js/main.56494d19.chunk.js","sourcesContent":["import React from 'react';\n\nconst SelectQuantity = props => {\n  const options = [...Array(26).keys()].map(i => (\n    <QuantityOption quantity={i} key={i} />\n  ));\n\n  return (\n    <select\n      name=\"quantity\"\n      defaultValue={props.selectedQuantity}\n      onChange={props.updateQuantity}\n    >\n      {options}\n    </select>\n  );\n};\n\nconst QuantityOption = props => {\n  const quantity = props.quantity;\n  if (quantity === 0) {\n    return <option value={quantity}>0 (Remove)</option>;\n  } else {\n    return <option value={quantity}>{quantity}</option>;\n  }\n};\n\nexport default SelectQuantity;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SelectQuantity from './SelectQuantity';\n\nconst CartItem = props => {\n  const item = props.item;\n\n  if (!item) {\n    return null;\n  }\n\n  const itemLink = '/item/' + item._id;\n  const imgUrl = process.env.PUBLIC_URL + item.img_url;\n\n  return (\n    <tr>\n      <td>\n        <Link to={itemLink}>{item.title && item.title}</Link>\n      </td>\n      <td className=\"muted center_text\">\n        <Link to={itemLink}>\n          <img width=\"300\" src={imgUrl} alt={item.title} />\n        </Link>\n      </td>\n      <td>\n        <SelectQuantity\n          selectedQuantity={item.quantity}\n          updateQuantity={props.updateQuantity}\n          itemId={props.itemId}\n          userid={props.userid}\n        />\n      </td>\n      <td>{item.price}</td>\n      <td>{(item.price * item.quantity).toFixed(2)}</td>\n    </tr>\n  );\n};\n\nexport default CartItem;\n","import React from 'react';\n\nconst Error = props => {\n  if (props.error) {\n    if (props.display && props.display === 'small') {\n      return (\n        <div className=\"error error-small\">\n          <p>{props.message && <span>{props.message}</span>}</p>\n          <p>\n            {props.error.name}: {props.error.errorCodeName} &mdash;{' '}\n            {props.error.message}\n          </p>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"row error\">\n          <div className=\"col-md-12\">\n            {props.message && <h2>{props.message}</h2>}\n            <p>\n              {props.error.name}: {props.error.errorCodeName}\n            </p>\n            <p>{props.error.message}</p>\n          </div>\n        </div>\n      );\n    }\n  } else {\n    return null;\n  }\n};\n\nexport default Error;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AnonymousCredential } from 'mongodb-stitch-browser-sdk';\n\nimport CartItem from './CartItem';\nimport Error from '../Error';\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cart: {\n        items: []\n      },\n      cartError: undefined,\n      updateQuantityError: undefined\n    };\n    this.updateQuantity = this.updateQuantity.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.client.auth\n      .loginWithCredential(new AnonymousCredential())\n      .then(() =>\n        this.props.db\n          .collection('cart')\n          .find({ userid: this.props.client.auth.currentUser.id })\n          .first()\n      )\n      .then(cart => {\n        if (cart && cart.items) {\n          this.setState({\n            cart: cart,\n            cartError: null\n          });\n        }\n      })\n      .catch(err => {\n        this.setState({\n          cartError: err\n        });\n        console.error(err);\n      });\n  }\n\n  updateQuantity(itemId, event) {\n    if (event && event.target && event.target.value) {\n      const newQuantity = parseInt(event.target.value);\n      if (newQuantity === 0) {\n        this.removeCartItem(itemId);\n      } else {\n        this.updateCartQuantity(itemId, newQuantity);\n      }\n    }\n  }\n\n  removeCartItem(itemId) {\n    this.props.client.auth\n      .loginWithCredential(new AnonymousCredential())\n      .then(() =>\n        this.props.db.collection('cart').updateOne(\n          {\n            userid: this.props.client.auth.currentUser.id\n          },\n          { $pull: { items: { _id: itemId } } }\n        )\n      )\n      .then(response => {\n        if (\n          response &&\n          response.modifiedCount &&\n          response.modifiedCount === 1\n        ) {\n          const updatedCart = this.state.cart;\n          updatedCart.items = updatedCart.items.filter(\n            item => item._id !== itemId\n          );\n          this.setState({\n            cart: updatedCart,\n            updateQuantityError: undefined\n          });\n        }\n      })\n      .catch(err => {\n        this.setState({ updateQuantityError: err });\n        console.error(err);\n      });\n  }\n\n  updateCartQuantity(itemId, newQuantity) {\n    this.props.client.auth\n      .loginWithCredential(new AnonymousCredential())\n      .then(() =>\n        this.props.db.collection('cart').updateOne(\n          {\n            userid: this.props.client.auth.currentUser.id,\n            'items._id': itemId\n          },\n          { $set: { 'items.$.quantity': newQuantity } }\n        )\n      )\n      .then(response => {\n        if (\n          response &&\n          response.modifiedCount &&\n          response.modifiedCount === 1\n        ) {\n          const updatedCart = this.state.cart;\n          updatedCart.items.forEach(item => {\n            if (item._id === itemId) {\n              item.quantity = newQuantity;\n            }\n          });\n          this.setState({\n            cart: updatedCart,\n            selectedQuantity: newQuantity,\n            updateQuantityError: undefined\n          });\n        }\n      })\n      .catch(err => {\n        this.setState({ updateQuantityError: err });\n        console.error(err);\n      });\n  }\n\n  renderCart() {\n    return this.state.cart.items.map(item => (\n      <CartItem\n        item={item}\n        userid={this.state.userid}\n        updateQuantity={e => this.updateQuantity(item._id, e)}\n        key={item._id}\n      />\n    ));\n  }\n\n  calculateTotal() {\n    return this.state.cart.items.reduce(\n      (a, b) => a + (b['price'] * b['quantity'] || 0),\n      0\n    );\n  }\n\n  render() {\n    if (!this.state.cartError) {\n      return (\n        <React.Fragment>\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <ol className=\"breadcrumb\">\n                <li>\n                  <Link to=\"/\">Home</Link>\n                </li>\n                <li className=\"active\">Cart</li>\n              </ol>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              {this.state.updateQuantityError && (\n                <Error\n                  message={'Error while updating quantity!'}\n                  error={this.state.updateQuantityError}\n                  display={'small'}\n                />\n              )}\n              <table className=\"table table-bordered table-striped\">\n                <thead>\n                  <tr>\n                    <th>Product Name</th>\n                    <th>Image</th>\n                    <th>Quantity</th>\n                    <th>Unit Price</th>\n                    <th>Total</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.renderCart()}\n                  <tr>\n                    <td>&nbsp;</td>\n                    <td>&nbsp;</td>\n                    <td>&nbsp;</td>\n                    <td>&nbsp;</td>\n                    <td>\n                      <strong>{this.calculateTotal().toFixed(2)}</strong>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-md-12 checkout\">\n                <button className=\"btn btn-success\" type=\"submit\">\n                  Proceed to Checkout\n                </button>\n              </div>\n            </div>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <Error\n          message={'Error while retrieving cart!'}\n          error={this.state.cartError}\n        />\n      );\n    }\n  }\n}\n\nexport default Cart;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default function Category(props) {\n  const category = props.category;\n\n  if (!category) {\n    return null;\n  }\n\n  const category_link = '/category/' + category._id;\n\n  return (\n    <NavLink\n      to={category_link}\n      className=\"list-group-item\"\n      activeClassName=\"active\"\n    >\n      {category.num && <span className=\"badge\">{category.num}</span>}\n      {category._id}\n    </NavLink>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function ProductItem(props) {\n  const item = props.item;\n\n  if (!item) {\n    return null;\n  }\n\n  const item_link = '/item/' + item._id;\n  const img_url = process.env.PUBLIC_URL + item.img_url;\n\n  return (\n    <React.Fragment>\n      <div className=\"row\">\n        <div className=\"col-md-7\">\n          <Link to={item_link}>\n            {item.img_url && (\n              <img className=\"img-responsive product\" src={img_url} alt=\"\" />\n            )}\n          </Link>\n        </div>\n        <div className=\"col-md-5\">\n          <h3>\n            <Link to={item_link}>{item.title && item.title}</Link>\n          </h3>\n          <h4>{item.slogan && item.slogan}</h4>\n          <p>{item.description && item.description}</p>\n          <Link className=\"btn btn-primary\" to={item_link}>\n            View Product\n            <span className=\"glyphicon glyphicon-chevron-right\" />\n          </Link>\n        </div>\n      </div>\n      <hr />\n    </React.Fragment>\n  );\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AnonymousCredential } from 'mongodb-stitch-browser-sdk';\nimport queryString from 'query-string';\n\nimport Category from './Category';\nimport Error from './Error';\nimport ProductListItem from './ProductList/ProductListItem';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categories: [],\n      categoriesError: undefined,\n      items: [],\n      productsError: undefined\n    };\n  }\n\n  componentDidMount() {\n    this.fetchProducts(this.props.match.params.category);\n    this.fetchCategories();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.match.params.category !== prevProps.match.params.category) {\n      this.fetchProducts(this.props.match.params.category);\n    }\n  }\n\n  fetchCategories() {\n    this.props.client.auth\n      .loginWithCredential(new AnonymousCredential())\n      .then(() =>\n        this.props.db\n          .collection('item')\n          .aggregate([\n            {\n              $group: {\n                _id: '$category',\n                num: { $sum: 1 }\n              }\n            },\n            { $sort: { _id: 1 } }\n          ])\n          .toArray()\n      )\n      .then(categories => {\n        var category = {\n          _id: 'All',\n          num: ''\n        };\n        categories.unshift(category);\n\n        this.setState({\n          categories: categories,\n          categoriesError: null\n        });\n      })\n      .catch(err => {\n        this.setState({\n          categoriesError: err\n        });\n        console.log(err);\n      });\n  }\n\n  fetchProducts(category) {\n    const query = category && category !== 'All' ? { category: category } : {};\n    const options = { sort: { _id: 1 } };\n\n    this.props.client.auth\n      .loginWithCredential(new AnonymousCredential())\n      .then(() =>\n        this.props.db\n          .collection('item')\n          .find(query, options)\n          .asArray()\n      )\n      .then(items => {\n        this.setState({\n          items: items,\n          productsError: null\n        });\n      })\n      .catch(err => {\n        this.setState({\n          productsError: err\n        });\n        console.error(err);\n      });\n  }\n\n  getCurrPage() {\n    const params = queryString.parse(this.props.location.search);\n    if (params.page) {\n      return parseInt(params.page);\n    } else {\n      return 0;\n    }\n  }\n\n  renderCategories() {\n    if (!this.state.categoriesError) {\n      // const category = this.props.match.params.category;\n      return this.state.categories.map(category => (\n        <Category category={category} key={category._id} />\n      ));\n    } else {\n      return (\n        <Error\n          message={'Error while retrieving categories!'}\n          error={this.state.categoriesError}\n        />\n      );\n    }\n  }\n\n  renderProducts() {\n    if (!this.state.productsError) {\n      const currPage = this.getCurrPage();\n      const skip = currPage * 5;\n      const limit = skip + 5;\n\n      return this.state.items.map((item, i) => {\n        if (i >= skip && i < limit) {\n          return <ProductListItem item={item} key={item._id} />;\n        }\n        return null;\n      });\n    } else {\n      return (\n        <Error\n          message={'Error while retrieving products!'}\n          error={this.state.productsError}\n        />\n      );\n    }\n  }\n\n  renderPagination() {\n    const pages = Math.ceil(this.state.items.length / 5);\n    return [...Array(pages).keys()].map(i => {\n      const category = this.props.match.params.category;\n      let link = category ? '/category/' + category : '/';\n      link += '?page=' + i;\n      const linkElm = <Link to={link}>{i + 1}</Link>;\n\n      const activeClass = this.getCurrPage() === i ? 'active' : 'inactive';\n\n      return (\n        <li className={activeClass} key={i}>\n          {linkElm}\n        </li>\n      );\n    });\n  }\n\n  render() {\n    const category = this.props.match.params.category;\n    const categoryName = category ? category : 'All';\n\n    return (\n      <React.Fragment>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <ol className=\"breadcrumb\">\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li className=\"active\">{categoryName}</li>\n            </ol>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-2\">\n            <div className=\"list-group\">{this.renderCategories()}</div>\n          </div>\n\n          <div className=\"col-md-10\">\n            {this.renderProducts()}\n            <div className=\"row text-center\">\n              <div className=\"col-lg-12\">\n                <ul className=\"pagination\">{this.renderPagination()}</ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { GoogleRedirectCredential } from 'mongodb-stitch-browser-sdk';\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedIn: false,\n      userName: 'Unnamed user'\n    };\n\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.client.auth.hasRedirectResult()) {\n      this.props.client.auth.handleRedirectResult().then(user => {\n        console.log(user);\n        if (user) {\n          this.setState({\n            isLoggedIn: true,\n            name: user.name\n          });\n        }\n      });\n    }\n    if (this.props.client.auth.isLoggedIn) {\n    }\n  }\n\n  login(e) {\n    e.preventDefault();\n    if (!this.state.isLoggedIn) {\n      const credential = new GoogleRedirectCredential();\n      this.props.client.auth.loginWithRedirect(credential);\n    }\n  }\n\n  logout(e) {\n    e.preventDefault();\n    if (this.state.isLoggedIn) {\n      this.props.client.auth.logout().then(response => {\n        console.log(response);\n        if (response) {\n          this.setState({\n            isLoggedIn: false,\n            name: ''\n          });\n        }\n      });\n    }\n  }\n\n  render() {\n    // const isLoggedIn = this.props.client.auth.isLoggedIn;\n    const isLoggedIn = this.state.isLoggedIn;\n\n    if (isLoggedIn) {\n      const name = this.props.client.auth.profile\n        ? this.props.client.auth.profile.name\n        : 'Unnamed user';\n\n      return (\n        <React.Fragment>\n          <li>\n            <a href=\"#no-link\" className=\"no-link\">\n              Welcome, {name}\n            </a>\n          </li>\n          <li>\n            <a href=\"#logout\" onClick={this.logout}>\n              Log Out\n            </a>\n          </li>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <li>\n          <a href=\"#login\" onClick={this.login}>\n            Log In\n          </a>\n        </li>\n      );\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport { AnonymousCredential } from 'mongodb-stitch-browser-sdk';\n\nimport Error from '../Error';\n\nexport default class AddToCart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addToCartError: undefined,\n      setNotificationError: undefined\n    };\n    this.addToCart = this.addToCart.bind(this);\n    this.setNotification = this.setNotification.bind(this);\n  }\n\n  componentDidMount() {}\n\n  addToCart() {\n    this.incrementProductQuantity();\n  }\n\n  incrementProductQuantity() {\n    // first try to increment quantity of item in cart,\n    // if fails, add item to cart or create cart (upsert)\n    let incQuery = {\n      userid: this.props.client.auth.currentUser.id,\n      'items._id': this.props.item._id\n    };\n    const incUpdate = { $inc: { 'items.$.quantity': 1 } };\n\n    this.props.client.auth\n      .loginWithCredential(new AnonymousCredential())\n      .then(() =>\n        // increment quantity by one\n        this.props.db.collection('cart').updateOne(incQuery, incUpdate)\n      )\n      .then(response => {\n        if (response && response.modifiedCount !== 1) {\n          // if not incremented,\n          // either add item to cart or create new cart (upsert)\n          this.createCartOrCartItem();\n        } else {\n          this.onAddToCartSuccess();\n        }\n      })\n      .catch(err => {\n        this.onAddToCartError(err);\n      });\n  }\n\n  createCartOrCartItem() {\n    let addQuery = { userid: this.props.client.auth.currentUser.id };\n    let addItem = this.props.item;\n    addItem.quantity = 1;\n    const addUpdate = { $addToSet: { items: addItem } };\n    const options = { upsert: true };\n\n    this.props.client.auth\n      .loginWithCredential(new AnonymousCredential())\n      .then(() =>\n        this.props.db.collection('cart').updateOne(addQuery, addUpdate, options)\n      )\n      .then(() => {\n        this.onAddToCartSuccess();\n      })\n      .catch(err => {\n        this.onAddToCartError(err);\n      });\n  }\n\n  onAddToCartSuccess() {\n    this.setState({ addToCartError: null });\n    this.refs.addToCartButton.setAttribute('disabled', '');\n    this.refs.addToCartButton.textContent = 'Added item to cart';\n    this.refs.addToCartButton.className =\n      this.refs.addToCartButton.className + ' success';\n  }\n\n  onAddToCartError(err) {\n    this.setState({ addToCartError: err });\n  }\n\n  setNotification() {\n    const notificationDocument = {\n      itemId: this.state.item._id,\n      userid: this.props.client.auth.currentUser.id,\n      email: this.props.client.auth.currentUser.profile.email\n    };\n    this.props.client.auth.loginWithCredential(new AnonymousCredential()).then(() =>\n      this.props.db.collection('notify').insertOne(notificationDocument)\n    ).then(() => {\n      this.onSetNotificationSuccess();\n    }).catch(err => {\n      this.onSetNotificationError(err)\n    });\n  }\n\n  onSetNotificationSuccess() {\n    this.setState({ setNotificationError: null });\n    this.refs.setNotificationButton.setAttribute('disabled', '');\n    this.refs.setNotificationButton.textContent = 'Added notification';\n    this.refs.setNotificationButton.className =\n      this.refs.setNotificationButton.className + ' success';\n  }\n\n  onSetNotificationError(err) {\n    this.setState({ setNotificationError: err });\n  }\n\n  render() {\n    const item = this.props.item;\n    if (item.stock > 0) {\n      return (\n        <React.Fragment>\n          <button\n            className=\"btn btn-primary\"\n            type=\"submit\"\n            ref=\"addToCartButton\"\n            onClick={this.addToCart}\n          >\n            Add to cart\n            <span className=\"glyphicon glyphicon-chevron-right\" />\n          </button>\n          <Error\n            message={'Error while adding to cart!'}\n            error={this.state.addToCartError}\n            display={'small'}\n          />\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <p className=\"red-text\">Sorry, this product is out of stock</p>\n          <button\n            className=\"btn btn-primary\"\n            type=\"submit\"\n            ref=\"setNotificationButton\"\n            onClick={() => this.setNotification()}\n          >\n            Notify me <br />\n            when in stock&nbsp;\n            <span className=\"glyphicon glyphicon-bell\" />\n          </button>\n          <Error\n            message={'Error while setting notification!'}\n            error={this.state.setNotificationError}\n            display={'small'}\n          />\n        </React.Fragment>\n      );\n    }\n  }\n}\n","import React from 'react';\n\nconst ProductRatingStar = props => {\n  const stars = props.stars;\n  const num = props.num;\n  if (stars >= num) {\n    return <span className=\"glyphicon glyphicon-star\" />;\n  } else {\n    return <span className=\"glyphicon glyphicon-star-empty\" />;\n  }\n};\n\nexport default ProductRatingStar;\n","import React from 'react';\nimport ProductRatingStar from './ProductRatingStar';\n\nconst ProductRating = props => {\n  return [...Array(5).keys()].map(i => (\n    <ProductRatingStar num={i + 1} stars={props.stars} key={i} />\n  ));\n};\n\nexport default ProductRating;\n","import React from 'react';\n\nimport ProductRating from '../ProductRating/ProductRating';\n\nconst ListReviews = props => {\n  if (!props.reviews || props.reviews.length === 0) {\n    return <p>There are no reviews for this product yet...</p>;\n  }\n\n  return props.reviews.map((review, i) => {\n    const date = new Date(review.date);\n    const dateString =\n      date.getUTCFullYear() +\n      '/' +\n      ('0' + (date.getUTCMonth() + 1)).slice(-2) +\n      '/' +\n      ('0' + date.getUTCDate()).slice(-2) +\n      ' ' +\n      ('0' + date.getUTCHours()).slice(-2) +\n      ':' +\n      ('0' + date.getUTCMinutes()).slice(-2) +\n      ':' +\n      ('0' + date.getUTCSeconds()).slice(-2);\n\n    if (review.userid && review.userid === props.client.auth.currentUser.id) {\n      review.editable = true;\n    }\n\n    return (\n      <React.Fragment key={i}>\n        <div>\n          <div>\n            <h4 className=\"media-heading review-header\">\n              {review.name}\n              <small> {dateString}</small>\n              {/* {review.editable && (\n                <a href=\"#editReview\" className=\"edit-review\">\n                  Edit\n                </a>\n              )} */}\n            </h4>\n            <div className=\"ratings\">\n              <ProductRating stars={review.stars} />\n            </div>\n            {review.comment}\n          </div>\n        </div>\n        <hr />\n      </React.Fragment>\n    );\n  });\n};\n\nexport default ListReviews;\n","import React, { Component } from 'react';\nimport {\n  AnonymousCredential,\n  RemoteMongoClient\n} from 'mongodb-stitch-browser-sdk';\n\nimport Error from '../Error';\n\nexport default class AddReview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rating: 5,\n      name: '',\n      comment: '',\n      addReviewError: undefined\n    };\n\n    this.handleRatingChange = this.handleRatingChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleCommentChange = this.handleCommentChange.bind(this);\n    this.addReview = this.addReview.bind(this);\n  }\n\n  handleRatingChange(event) {\n    this.setState({ rating: event.target.value });\n  }\n\n  handleNameChange(event) {\n    this.setState({ name: event.target.value });\n  }\n\n  handleCommentChange(event) {\n    this.setState({ comment: event.target.value });\n  }\n\n  addReview() {\n    const review = {\n      userid: this.props.client.auth.currentUser.id,\n      productId: this.props.productId,\n      // name: this.props.client.auth.currentUser.name\n      // ? this.props.client.auth.currentUser.name\n      // : 'Anonymous User',\n      name: this.state.name,\n      comment: this.state.comment,\n      stars: this.state.rating,\n      date: new Date().getTime()\n    };\n\n    const reviewsDb = this.props.client\n      .getServiceClient(RemoteMongoClient.factory, 'mm-reviews')\n      .db('mongomart');\n    this.props.client.auth\n      .loginWithCredential(new AnonymousCredential())\n      .then(() => reviewsDb.collection('reviews').insertOne(review))\n      .then(response => {\n        this.setState({ addReviewError: null, isWritingReview: false });\n        this.props.onAddReview(review);\n        this.disableAddReviewButton();\n      })\n      .catch(err => {\n        this.setState({ addReviewError: err });\n        console.error(err);\n      });\n  }\n\n  disableAddReviewButton() {\n    this.refs.addReviewButton.setAttribute('disabled', '');\n    this.refs.addReviewButton.textContent = 'Added review';\n    this.refs.addReviewButton.className =\n      this.refs.addReviewButton.className + ' success';\n  }\n\n  render() {\n    return (\n      <div className=\"well add-review\">\n        <h4>Add a Review:</h4>\n        <div className=\"form-group\">\n          <label className=\"expand\">\n            Review:\n            <textarea\n              name=\"review\"\n              className=\"form-control\"\n              rows=\"3\"\n              placeholder=\"Your comment...\"\n              value={this.state.comment}\n              onChange={this.handleCommentChange}\n            />\n          </label>\n        </div>\n        <div className=\"form-group\">\n          <label>\n            Name:\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"name\"\n              name=\"name\"\n              placeholder=\"Enter display name\"\n              value={this.state.name}\n              onChange={this.handleNameChange}\n            />\n          </label>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"radio-inline\">\n            <input\n              type=\"radio\"\n              name=\"stars\"\n              id=\"stars\"\n              value=\"1\"\n              onChange={this.handleRatingChange}\n            />{' '}\n            1 star\n          </label>\n          <label className=\"radio-inline\">\n            <input\n              type=\"radio\"\n              name=\"stars\"\n              id=\"stars\"\n              value=\"2\"\n              onChange={this.handleRatingChange}\n            />{' '}\n            2 star\n          </label>\n          <label className=\"radio-inline\">\n            <input\n              type=\"radio\"\n              name=\"stars\"\n              id=\"stars\"\n              value=\"3\"\n              onChange={this.handleRatingChange}\n            />{' '}\n            3 star\n          </label>\n          <label className=\"radio-inline\">\n            <input\n              type=\"radio\"\n              name=\"stars\"\n              id=\"stars\"\n              value=\"4\"\n              onChange={this.handleRatingChange}\n            />{' '}\n            4 star\n          </label>\n          <label className=\"radio-inline\">\n            <input\n              type=\"radio\"\n              name=\"stars\"\n              id=\"stars\"\n              value=\"5\"\n              onChange={this.handleRatingChange}\n              checked\n            />{' '}\n            5 star\n          </label>\n        </div>\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary\"\n          ref=\"addReviewButton\"\n          onClick={this.addReview}\n        >\n          Submit Review\n        </button>\n        {this.state.addReviewError && (\n          <Error\n            message={'Error while adding review!'}\n            error={this.state.addReviewError}\n            display={'small'}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  AnonymousCredential,\n  RemoteMongoClient\n} from 'mongodb-stitch-browser-sdk';\n\nimport Error from '../Error';\nimport AddToCart from './AddToCart';\nimport ListReviews from '../Reviews/ListReviews';\nimport AddReview from '../Reviews/AddReview';\nimport ProductRating from '../ProductRating/ProductRating';\n\nexport default class ProductItemDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      item: {},\n      reviews: [],\n      productError: undefined,\n      reviewsError: undefined\n    };\n    this.handleAddReview = this.handleAddReview.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchProduct();\n    this.fetchReviews();\n  }\n\n  fetchProduct() {\n    const itemId = parseInt(this.props.match.params.id);\n\n    this.props.client.auth\n      .loginWithCredential(new AnonymousCredential())\n      .then(() =>\n        this.props.db\n          .collection('item')\n          .find({ _id: itemId }, { limit: 1 })\n          .asArray()\n      )\n      .then(response => {\n        if (response && response[0]) {\n          this.setState({\n            item: response[0],\n            productError: null\n          });\n        }\n      })\n      .catch(err => {\n        this.setState({\n          productError: err\n        });\n        console.error(err);\n      });\n  }\n\n  fetchReviews() {\n    const itemId = parseInt(this.props.match.params.id);\n\n    const reviewsDb = this.props.client\n      .getServiceClient(RemoteMongoClient.factory, 'mm-reviews')\n      .db('mongomart');\n    this.props.client.auth\n      .loginWithCredential(new AnonymousCredential())\n      .then(() =>\n        reviewsDb\n          .collection('reviews')\n          .find({ productId: itemId })\n          .asArray()\n      )\n      .then(response => {\n        if (response) {\n          this.setState({\n            reviews: response,\n            reviewsError: null\n          });\n        }\n      })\n      .catch(err => {\n        this.setState({\n          reviewsError: err\n        });\n        console.error(err);\n      });\n  }\n\n  handleAddReview(review) {\n    let updatedReviews = this.state.reviews;\n    updatedReviews.push(review);\n    this.setState({ reviews: updatedReviews });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.renderProduct()}\n        {this.renderReviews()}\n      </React.Fragment>\n    );\n  }\n\n  renderProduct() {\n    const item = this.state.item;\n\n    if (!item) {\n      return null;\n    }\n\n    let stars = 0;\n    let numReviews = 0;\n    const reviews = this.state.reviews;\n\n    if (reviews) {\n      numReviews = reviews.length;\n\n      for (let i = 0; i < numReviews; i++) {\n        const review = reviews[i];\n        stars += review.stars;\n      }\n\n      if (numReviews > 0) {\n        stars = stars / numReviews;\n      }\n    }\n\n    const categoryLink = '/category/' + item.category;\n    const img_url = process.env.PUBLIC_URL + item.img_url;\n\n    if (!this.state.productError) {\n      return (\n        <React.Fragment>\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <ol className=\"breadcrumb\">\n                <li>\n                  <Link to=\"/\">Home</Link>\n                </li>\n                <li className=\"active\">\n                  <Link to={categoryLink}>{item.category}</Link>\n                </li>\n                <li className=\"active\">{item.title}</li>\n              </ol>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-lg-12\">\n              <h1 className=\"page-header\">\n                {item.title}\n                <small> {item.slogan}</small>\n              </h1>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-8\">\n              <img className=\"img-responsive product\" src={img_url} alt=\"\" />\n            </div>\n\n            <div className=\"col-md-4\">\n              <h3>Product Description</h3>\n\n              <div className=\"ratings\">\n                <p className=\"pull-right\">{numReviews} review(s)</p>\n                <p>\n                  <ProductRating stars={stars} />\n                </p>\n              </div>\n\n              <p>{item.description}</p>\n\n              <AddToCart\n                item={item}\n                db={this.props.db}\n                client={this.props.client}\n              />\n            </div>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <Error\n          message={'Error while retrieving product!'}\n          error={this.state.productError}\n        />\n      );\n    }\n  }\n\n  renderReviews() {\n    if (!this.state.reviewsError) {\n      return (\n        <div className=\"row reviews\">\n          <div className=\"col-lg-12\">\n            <h3 className=\"page-header\">Latest Reviews</h3>\n          </div>\n          <div className=\"col-lg-12\">\n            <ListReviews\n              client={this.props.client}\n              reviews={this.state.reviews}\n            />\n            <AddReview\n              client={this.props.client}\n              productId={this.state.item._id}\n              onAddReview={this.handleAddReview}\n            />\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <Error\n          message={'Error while fetching reviews!'}\n          error={this.state.reviewsError}\n        />\n      );\n    }\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport { Stitch, RemoteMongoClient } from 'mongodb-stitch-browser-sdk';\n\nimport Cart from './Cart/Cart';\nimport Home from './Home';\nimport Login from './Login';\nimport ProductItemDetail from './ProductDetail/ProductItemDetail';\n\n// replace Stitch App ID in the next line\nconst stitchAppId = 'mongomart-vyoeg';\nconst client = Stitch.initializeDefaultAppClient(stitchAppId);\nconst db = client\n  .getServiceClient(RemoteMongoClient.factory, 'mm-products')\n  .db('mongomart');\n\nconst Routing = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <React.Fragment>\n      <nav className=\"navbar navbar-inverse navbar-fixed-top\" role=\"navigation\">\n        <div className=\"container\">\n          <div className=\"navbar-header\">\n            <button\n              type=\"button\"\n              className=\"navbar-toggle\"\n              data-toggle=\"collapse\"\n              data-target=\"#bs-example-navbar-collapse-1\"\n            >\n              <span className=\"sr-only\">Toggle navigation</span>\n              <span className=\"icon-bar\" />\n              <span className=\"icon-bar\" />\n              <span className=\"icon-bar\" />\n            </button>\n            <Link className=\"navbar-brand\" to=\"/\">\n              MongoMart\n            </Link>\n          </div>\n          <div\n            className=\"collapse navbar-collapse\"\n            id=\"bs-example-navbar-collapse-1\"\n          >\n            <ul className=\"nav navbar-nav\">\n              <Login client={client} />\n            </ul>\n            <div className=\"collapse navbar-collapse\">\n              <form\n                className=\"navbar-form navbar-right\"\n                role=\"search\"\n                action=\"/search\"\n              >\n                {/* <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"query\"\n                    placeholder=\"Search\"\n                  />\n                </div>\n                <button type=\"submit\" className=\"btn btn-default\">\n                  Submit\n                </button> */}\n                <Link to=\"/cart\">\n                  <button type=\"button\" className=\"btn btn-success\">\n                    <span\n                      className=\"glyphicon glyphicon-shopping-cart\"\n                      aria-hidden=\"true\"\n                    />{' '}\n                    Cart\n                  </button>\n                </Link>\n              </form>\n            </div>\n          </div>\n        </div>\n      </nav>\n      <div className=\"container\">\n        <Route\n          exact\n          path=\"/\"\n          render={props => <Home {...props} client={client} db={db} />}\n        />\n        <Route\n          path=\"/category/:category\"\n          render={props => <Home {...props} client={client} db={db} />}\n        />\n        <Route\n          path=\"/cart\"\n          render={props => <Cart {...props} client={client} db={db} />}\n        />\n        <Route\n          path=\"/item/:id\"\n          render={props => (\n            <ProductItemDetail {...props} client={client} db={db} />\n          )}\n        />\n      </div>\n    </React.Fragment>\n  </Router>\n);\n\nReactDOM.render(<Routing />, document.getElementById('root'));\n"],"sourceRoot":""}